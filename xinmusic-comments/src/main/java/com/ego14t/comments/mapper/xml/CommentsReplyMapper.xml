<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ego14t.comments.mapper.CommentsReplyMapper">
  <resultMap id="BaseResultMap" type="com.ego14t.comments.pojo.CommentsReply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="comment_id" jdbcType="VARCHAR" property="commentId" />
    <result column="from_id" jdbcType="VARCHAR" property="fromId" />
    <result column="from_name" jdbcType="VARCHAR" property="fromName" />
    <result column="from_avatar" jdbcType="VARCHAR" property="fromAvatar" />
    <result column="to_id" jdbcType="VARCHAR" property="toId" />
    <result column="to_name" jdbcType="VARCHAR" property="toName" />
    <result column="to_avatar" jdbcType="VARCHAR" property="toAvatar" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, comment_id, from_id, from_name, from_avatar, to_id, to_name, to_avatar, content, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.ego14t.comments.pojo.example.CommentsReplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comments_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comments_reply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comments_reply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ego14t.comments.pojo.example.CommentsReplyExample">
    delete from comments_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ego14t.comments.pojo.CommentsReply">
    insert into comments_reply (id, comment_id, from_id, 
      from_name, from_avatar, to_id, 
      to_name, to_avatar, content, 
      create_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{commentId,jdbcType=VARCHAR}, #{fromId,jdbcType=VARCHAR}, 
      #{fromName,jdbcType=VARCHAR}, #{fromAvatar,jdbcType=VARCHAR}, #{toId,jdbcType=VARCHAR}, 
      #{toName,jdbcType=VARCHAR}, #{toAvatar,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ego14t.comments.pojo.CommentsReply">
    insert into comments_reply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="commentId != null">
        comment_id,
      </if>
      <if test="fromId != null">
        from_id,
      </if>
      <if test="fromName != null">
        from_name,
      </if>
      <if test="fromAvatar != null">
        from_avatar,
      </if>
      <if test="toId != null">
        to_id,
      </if>
      <if test="toName != null">
        to_name,
      </if>
      <if test="toAvatar != null">
        to_avatar,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="commentId != null">
        #{commentId,jdbcType=VARCHAR},
      </if>
      <if test="fromId != null">
        #{fromId,jdbcType=VARCHAR},
      </if>
      <if test="fromName != null">
        #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="fromAvatar != null">
        #{fromAvatar,jdbcType=VARCHAR},
      </if>
      <if test="toId != null">
        #{toId,jdbcType=VARCHAR},
      </if>
      <if test="toName != null">
        #{toName,jdbcType=VARCHAR},
      </if>
      <if test="toAvatar != null">
        #{toAvatar,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ego14t.comments.pojo.example.CommentsReplyExample" resultType="java.lang.Long">
    select count(*) from comments_reply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comments_reply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.commentId != null">
        comment_id = #{record.commentId,jdbcType=VARCHAR},
      </if>
      <if test="record.fromId != null">
        from_id = #{record.fromId,jdbcType=VARCHAR},
      </if>
      <if test="record.fromName != null">
        from_name = #{record.fromName,jdbcType=VARCHAR},
      </if>
      <if test="record.fromAvatar != null">
        from_avatar = #{record.fromAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.toId != null">
        to_id = #{record.toId,jdbcType=VARCHAR},
      </if>
      <if test="record.toName != null">
        to_name = #{record.toName,jdbcType=VARCHAR},
      </if>
      <if test="record.toAvatar != null">
        to_avatar = #{record.toAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comments_reply
    set id = #{record.id,jdbcType=INTEGER},
      comment_id = #{record.commentId,jdbcType=VARCHAR},
      from_id = #{record.fromId,jdbcType=VARCHAR},
      from_name = #{record.fromName,jdbcType=VARCHAR},
      from_avatar = #{record.fromAvatar,jdbcType=VARCHAR},
      to_id = #{record.toId,jdbcType=VARCHAR},
      to_name = #{record.toName,jdbcType=VARCHAR},
      to_avatar = #{record.toAvatar,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ego14t.comments.pojo.CommentsReply">
    update comments_reply
    <set>
      <if test="commentId != null">
        comment_id = #{commentId,jdbcType=VARCHAR},
      </if>
      <if test="fromId != null">
        from_id = #{fromId,jdbcType=VARCHAR},
      </if>
      <if test="fromName != null">
        from_name = #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="fromAvatar != null">
        from_avatar = #{fromAvatar,jdbcType=VARCHAR},
      </if>
      <if test="toId != null">
        to_id = #{toId,jdbcType=VARCHAR},
      </if>
      <if test="toName != null">
        to_name = #{toName,jdbcType=VARCHAR},
      </if>
      <if test="toAvatar != null">
        to_avatar = #{toAvatar,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ego14t.comments.pojo.CommentsReply">
    update comments_reply
    set comment_id = #{commentId,jdbcType=VARCHAR},
      from_id = #{fromId,jdbcType=VARCHAR},
      from_name = #{fromName,jdbcType=VARCHAR},
      from_avatar = #{fromAvatar,jdbcType=VARCHAR},
      to_id = #{toId,jdbcType=VARCHAR},
      to_name = #{toName,jdbcType=VARCHAR},
      to_avatar = #{toAvatar,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
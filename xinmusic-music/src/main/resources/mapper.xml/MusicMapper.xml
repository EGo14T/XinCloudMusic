<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ego14t.xinmusic.mapper.MusicMapper">
    <resultMap id="BaseResultMap" type="com.ego14t.xinmusic.pojo.Music">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="singer" jdbcType="VARCHAR" property="singer"/>
        <result column="album" jdbcType="VARCHAR" property="album"/>
        <result column="length" jdbcType="VARCHAR" property="length"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, `name`, singer, album, `length`
  </sql>
    <select id="selectByExample" parameterType="com.ego14t.xinmusic.pojo.example.MusicExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from music
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limit != null">
            <if test="offset != null">
                limit ${offset}, ${limit}
            </if>
            <if test="offset == null">
                limit ${limit}
            </if>
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from music
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from music
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.ego14t.xinmusic.pojo.example.MusicExample">
        delete from music
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ego14t.xinmusic.pojo.Music">
    insert into music (id, `name`, singer, 
      album, `length`)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{singer,jdbcType=VARCHAR}, 
      #{album,jdbcType=VARCHAR}, #{length,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.ego14t.xinmusic.pojo.Music">
        insert into music
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="singer != null">
                singer,
            </if>
            <if test="album != null">
                album,
            </if>
            <if test="length != null">
                `length`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="singer != null">
                #{singer,jdbcType=VARCHAR},
            </if>
            <if test="album != null">
                #{album,jdbcType=VARCHAR},
            </if>
            <if test="length != null">
                #{length,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ego14t.xinmusic.pojo.example.MusicExample"
            resultType="java.lang.Long">
        select count(*) from music
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update music
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null">
                `name` = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.singer != null">
                singer = #{record.singer,jdbcType=VARCHAR},
            </if>
            <if test="record.album != null">
                album = #{record.album,jdbcType=VARCHAR},
            </if>
            <if test="record.length != null">
                `length` = #{record.length,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update music
        set id = #{record.id,jdbcType=VARCHAR},
        `name` = #{record.name,jdbcType=VARCHAR},
        singer = #{record.singer,jdbcType=VARCHAR},
        album = #{record.album,jdbcType=VARCHAR},
        `length` = #{record.length,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ego14t.xinmusic.pojo.Music">
        update music
        <set>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="singer != null">
                singer = #{singer,jdbcType=VARCHAR},
            </if>
            <if test="album != null">
                album = #{album,jdbcType=VARCHAR},
            </if>
            <if test="length != null">
                `length` = #{length,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ego14t.xinmusic.pojo.Music">
    update music
    set `name` = #{name,jdbcType=VARCHAR},
      singer = #{singer,jdbcType=VARCHAR},
      album = #{album,jdbcType=VARCHAR},
      `length` = #{length,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>


    <!--根据歌单id 查询歌单拥有的歌曲id，再查询music表，返回音乐列表-->
    <select id="searchMusicList" resultMap="BaseResultMap"
            parameterType="com.ego14t.xinmusic.pojo.example.MusicExample">
    SELECT  *
    FROM music
    WHERE id
    IN
    (SELECT musicID FROM musiclist_music WHERE MusicListID= #{id,jdbcType=VARCHAR})
  </select>

    <!--根据歌单id，用户id，查询musiclist_music表,和user_music表。返回歌单列表和收藏的歌曲列表-->
    <select id="searchCollection" resultMap="BaseResultMap"
            parameterType="com.ego14t.xinmusic.pojo.example.MusicExample">
    SELECT
	*
    FROM
	music
    WHERE id
	IN
	(
	SELECT c.musicID
	FROM
		musiclist_user a,
		musiclist_music b
		LEFT JOIN user_music c ON b.musicID = c.musicID
		AND c.userID = #{userId,jdbcType=VARCHAR}
	WHERE
		a.userID = #{userId,jdbcType=VARCHAR}
	AND a.musicListID = b.musicListID)
  </select>

    <select id="searchUserMusic" resultMap="BaseResultMap"
            parameterType="com.ego14t.xinmusic.pojo.example.MusicExample">

SELECT
	c.*,
	collect.musicID
FROM
	music c
	LEFT JOIN (
	SELECT
		b.musicID
	FROM
		musiclist_music b
	WHERE
	b.musicListID IN ( SELECT a.musicListID FROM musiclist_user a WHERE a.userID = #{userId,jdbcType=VARCHAR} AND a.`status` = 0 )) AS collect ON collect.musicID = c.id
WHERE
	c.id IN ( SELECT b.id FROM music b WHERE b.`name` LIKE  #{keyword ,jdbcType=VARCHAR});
  </select>


    <!--根据歌单id，用户id，查询musiclist_music表,和user_music表。返回带收藏信息的总结果集-->
    <select id="searchUserNumList" resultMap="BaseResultMap"
            parameterType="com.ego14t.xinmusic.pojo.example.MusicExample">
SELECT
	c.*,
	collect.musicID
FROM
	music c
	LEFT JOIN (
	SELECT
		b.musicID
	FROM
		musiclist_music b
	WHERE
	b.musicListID IN ( SELECT a.musicListID FROM musiclist_user a WHERE a.userID = #{userId,jdbcType=VARCHAR} AND a.`status` = 0 )) AS collect ON collect.musicID = c.id
WHERE
	c.id IN ( SELECT b.musicID FROM musiclist_music b WHERE b.musicListID = #{musicListID,jdbcType=VARCHAR});
</select>
    <!-- 根据歌单ID 查询歌单中的歌曲列表-->
    <select id="searchNumList" resultMap="BaseResultMap" parameterType="com.ego14t.xinmusic.pojo.example.MusicExample">
SELECT
	a.*
FROM
	music a
WHERE
	a.id IN (
	SELECT
		b.musicID
	FROM
		musiclist_music b
WHERE
	b.musicListID = #{musicListID,jdbcType=VARCHAR});
</select>
    <delete id="delMusicListById" parameterType="com.ego14t.xinmusic.pojo.example.MusicExample">
    DELETE
    musiclist_user,musiclist_music
    FROM
    musiclist_user,musiclist_music
    WHERE musiclist_user.musicListID = musiclist_music.musicListID
    AND musiclist_user.musicListID = #{id,jdbcType=VARCHAR};
</delete>
</mapper>
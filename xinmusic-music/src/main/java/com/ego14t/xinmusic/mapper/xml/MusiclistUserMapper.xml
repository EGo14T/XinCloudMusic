<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ego14t.xinmusic.mapper.MusiclistUserMapper" >
  <resultMap id="BaseResultMap" type="com.ego14t.xinmusic.pojo.MusiclistUser" >
    <id column="musicListID" property="musiclistid" jdbcType="INTEGER" />
    <result column="userID" property="userid" jdbcType="INTEGER" />
    <result column="musiclist_Name" property="musiclistName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="DATE" />
    <result column="tags" property="tags" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="musiclist_img" property="musiclistImg" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="isCollecting" property="iscollecting" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    musicListID, userID, musiclist_Name, create_time, tags, description, musiclist_img, 
    status, isCollecting
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ego14t.xinmusic.pojo.example.MusiclistUserExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from musiclist_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from musiclist_user
    where musicListID = #{musiclistid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from musiclist_user
    where musicListID = #{musiclistid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ego14t.xinmusic.pojo.example.MusiclistUserExample" >
    delete from musiclist_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ego14t.xinmusic.pojo.MusiclistUser" >
    insert into musiclist_user (musicListID, userID, musiclist_Name, 
      create_time, tags, description, 
      musiclist_img, status, isCollecting
      )
    values (#{musiclistid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{musiclistName,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=DATE}, #{tags,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{musiclistImg,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{iscollecting,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ego14t.xinmusic.pojo.MusiclistUser" useGeneratedKeys="true" keyProperty="musiclistid">
    insert into musiclist_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="musiclistid != null" >
        musicListID,
      </if>
      <if test="userid != null" >
        userID,
      </if>
      <if test="musiclistName != null" >
        musiclist_Name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="tags != null" >
        tags,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="musiclistImg != null" >
        musiclist_img,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="iscollecting != null" >
        isCollecting,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="musiclistid != null" >
        #{musiclistid,jdbcType=INTEGER},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="musiclistName != null" >
        #{musiclistName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="tags != null" >
        #{tags,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="musiclistImg != null" >
        #{musiclistImg,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="iscollecting != null" >
        #{iscollecting,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ego14t.xinmusic.pojo.example.MusiclistUserExample" resultType="java.lang.Integer" >
    select count(*) from musiclist_user
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update musiclist_user
    <set >
      <if test="record.musiclistid != null" >
        musicListID = #{record.musiclistid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null" >
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.musiclistName != null" >
        musiclist_Name = #{record.musiclistName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.tags != null" >
        tags = #{record.tags,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.musiclistImg != null" >
        musiclist_img = #{record.musiclistImg,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.iscollecting != null" >
        isCollecting = #{record.iscollecting,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update musiclist_user
    set musicListID = #{record.musiclistid,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=INTEGER},
      musiclist_Name = #{record.musiclistName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      tags = #{record.tags,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      musiclist_img = #{record.musiclistImg,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      isCollecting = #{record.iscollecting,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ego14t.xinmusic.pojo.MusiclistUser" >
    update musiclist_user
    <set >
      <if test="userid != null" >
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="musiclistName != null" >
        musiclist_Name = #{musiclistName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="tags != null" >
        tags = #{tags,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="musiclistImg != null" >
        musiclist_img = #{musiclistImg,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="iscollecting != null" >
        isCollecting = #{iscollecting,jdbcType=INTEGER},
      </if>
    </set>
    where musicListID = #{musiclistid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ego14t.xinmusic.pojo.MusiclistUser" >
    update musiclist_user
    set userID = #{userid,jdbcType=INTEGER},
      musiclist_Name = #{musiclistName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      tags = #{tags,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      musiclist_img = #{musiclistImg,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      isCollecting = #{iscollecting,jdbcType=INTEGER}
    where musicListID = #{musiclistid,jdbcType=INTEGER}
  </update>
</mapper>
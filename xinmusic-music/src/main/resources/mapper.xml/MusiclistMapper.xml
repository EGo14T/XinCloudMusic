<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ego14t.xinmusic.mapper.MusiclistMapper">
    <!-- 查询用户收藏的歌单信息 带歌曲总数 -->
    <select id="getUserCollectMusicList" resultType="com.ego14t.xinmusic.pojo.UserMusiclist">
        SELECT
            a.*,
            count( c.musiclist_id ) AS music_sum
        FROM
            xinmusic_musiclist a
            LEFT JOIN xinmusic_collect b ON b.userid = #{userid}
            LEFT JOIN xinmusic_musiclist_music c ON c.musiclist_id = b.musiclist_id
        WHERE
            a.musiclist_id = b.musiclist_id
        GROUP BY
            a.musiclist_id
        ORDER BY
	        b.create_time
    </select>

    <!-- 查询用户创建的歌单信息 带歌曲总数 -->
    <select id="getUserCreateMusicList" resultType="com.ego14t.xinmusic.pojo.UserMusiclist">
        SELECT
            a.*,
            count( c.musiclist_id ) AS music_sum
        FROM
            xinmusic_musiclist a
            LEFT JOIN xinmusic_musiclist_music c ON c.musiclist_id = a.musiclist_id
        WHERE
            a.create_user_id = #{userid}
            <if test="userid != currentUserId">
                AND a.status != 2
            </if>
        GROUP BY
            a.musiclist_id
        ORDER BY
	        a.create_time DESC
    </select>

    <select id="getDiscoverMusicList" resultType="com.ego14t.xinmusic.pojo.UserMusiclist">
        SELECT
            a.*,
            count( c.musiclist_id ) AS music_sum
        FROM
            xinmusic_musiclist a
            LEFT JOIN xinmusic_musiclist_music c ON c.musiclist_id = a.musiclist_id
        WHERE
            a.status = 1
        GROUP BY
            a.musiclist_id
        ORDER BY
            a.create_time
        LIMIT 10
    </select>

    <insert id="collectMusicList" parameterType="com.ego14t.xinmusic.entity.MusicListCollectEntity">
        INSERT INTO xinmusic_collect
        (userid,
        musiclist_id,
        create_time)
        VALUES
         (#{userid},
         #{musiclistId},
         #{createTime})
    </insert>

    <delete id="unCollectMusicList" parameterType="com.ego14t.xinmusic.entity.MusicListCollectEntity">
        DELETE FROM
            xinmusic_collect
        WHERE
            userid = #{userid}
          AND
            musiclist_id = #{musiclistId}
    </delete>

    <select id="getMusicListInfo" resultType="com.ego14t.xinmusic.pojo.MusicListInfo">
        SELECT
            a.*,
            b.nickname,
            b.avatar,
            c.userid AS collect
        FROM
            xinmusic_musiclist a,
            xinmusic_base_user b
            LEFT JOIN xinmusic_collect c ON c.userid = #{userid}
            AND c.musiclist_id = #{musiclistId}
        WHERE
            a.musiclist_id = #{musiclistId}
            AND a.create_user_id = b.userid
    </select>

    <select id="queryObject" resultType="com.ego14t.xinmusic.entity.MusicListEntity">
        SELECT
               *
        FROM xinmusic_musiclist t
        WHERE
        <if test="userid != null and userid != ''">
            t.create_user_id = #{userid} AND
        </if>
        t.musiclist_id = #{musiclistId}
    </select>

    <insert id="createMusicList" parameterType="com.ego14t.xinmusic.entity.MusicListEntity">
        INSERT INTO xinmusic_musiclist
        ( id,
        musiclist_id,
        create_user_id,
        musiclist_name,
        tags,
        description,
        musiclist_img,
        `status`,
        create_time,
        update_time )
        VALUES
        (#{id},
        #{musiclistId},
        #{createUserId},
        #{musiclistName},
        #{tags},
        #{description},
        #{musiclistImg},
        #{status},
        #{createTime},
        #{updateTime})
    </insert>

    <update id="update" parameterType="com.ego14t.xinmusic.entity.MusicListEntity">
        UPDATE xinmusic_musiclist
        SET
        <if test="musiclistName != null and musiclistName != ''">
            musiclist_name = #{musiclistName},
        </if>
        <if test="tags != null and tags != ''">
            tags = #{tags},
        </if>
        <if test="description != null and description != ''">
            description = #{description},
        </if>
        <if test="status != null">
            `status` = #{status},
        </if>
        <if test="musiclistImg != null and musiclistImg != ''">
            musiclist_img = #{musiclistImg},
        </if>
        update_time = #{updateTime}
        WHERE
        musiclist_id = #{musiclistId}
    </update>

    <delete id="delCollect">
        DELETE FROM xinmusic_collect t WHERE t.userid = #{userid} AND t.musiclist_id = #{musiclistId}
    </delete>

    <delete id="delCreatedList">
        DELETE FROM xinmusic_musiclist t WHERE t.create_user_id = #{userid} AND t.musiclist_id = #{musiclistId}
    </delete>

    <delete id="delMusicFromList">
        DELETE FROM xinmusic_musiclist_music t WHERE t.musiclist_id = #{musiclistId}
    </delete>


</mapper>